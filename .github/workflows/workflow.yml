# This workflow will build a Java project with Maven

name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-demo-1
  GKE_ZONE: us-central1-c

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        
    - name: Building and Pushing user-service
      run: mvn package dockerfile:push --file user-service/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Building and Pushing department-service
      run: mvn package dockerfile:push --file department-service/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Building and Pushing cloud-config-server
      run: mvn package dockerfile:push --file cloud-config-server/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Building and Pushing cloud-gateway
      run: mvn package dockerfile:push --file cloud-gateway/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Building and Pushing service-registry
      run: mvn package dockerfile:push --file service-registry/pom.xml
      env:
        MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: ${{ secrets.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: apply -f k8s/
